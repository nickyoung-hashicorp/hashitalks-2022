#!/bin/bash -l
# This is the setup script for the workstation container. Use it to set the stage for your terraform training, demo, or lab.
set -e

# Wait for Instruqt to finish booting the VM
# This is better than doing sleep
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    echo "Waiting for Instruqt to finish booting the VM"
    sleep 1
done

# Set Terraform Version
TERRAFORM_VERSION="1.1.5"

# Install desired version of Terraform
wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
mv terraform /usr/local/bin/terraform
chmod +x /usr/local/bin/terraform
rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip

# Install software
sudo apt update -y

# Clone repo
git clone https://github.com/nickyoung-hashicorp/hashitalks-2022.git

# Set the user's working directory
set-workdir /root/hashitalks-2022/tf

# Avoid SSH prompt
sudo sed -i 's/#   StrictHostKeyChecking ask/StrictHostKeyChecking no/g' /etc/ssh/ssh_config

# Deploy Infrastructure
cd /root/hashitalks-2022/tf
terraform init
nohup terraform apply -auto-approve

# Save Terraform output and copy it to Vault nodes
sudo tee "~/save_output.sh" > /dev/null <<SAVEOUTPUT
terraform output -json > ~/hashitalks-2022/tf/output.txt
scp -i privateKey.pem output.txt privateKey.pem ubuntu@$(cat ~/output.txt | jq -r '.vault_ip.value'):~
scp -i privateKey.pem output.txt privateKey.pem ubuntu@$(cat ~/output.txt | jq -r '.vault_ent_ip.value'):~
echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> ~/access_key.txt
echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> ~/secret_key.txt
scp -i privateKey.pem access_key.txt secret_key.txt ubuntu@$(cat ~/output.txt | jq -r '.vault_hsm_ip.value'):~
SAVEOUTPUT

chmod +x *.sh
~/save_output.sh

exit 0
